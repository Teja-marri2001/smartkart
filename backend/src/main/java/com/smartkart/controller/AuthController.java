package com.smartkart.controller; import com.smartkart.dto.*; import com.smartkart.model.*; import com.smartkart.repo.UserRepository; import com.smartkart.security.JwtUtil; import jakarta.validation.Valid; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.security.authentication.*; import org.springframework.security.crypto.password.PasswordEncoder; import org.springframework.web.bind.annotation.*; import java.util.Map; @RestController @RequestMapping("/api/auth") @CrossOrigin public class AuthController { @Autowired private UserRepository userRepository; @Autowired private PasswordEncoder encoder; @Autowired private AuthenticationManager authManager; @Autowired private JwtUtil jwtUtil; @PostMapping("/register") public AuthResponse register(@RequestBody @Valid RegisterRequest req){ if(userRepository.existsByEmail(req.getEmail())) throw new RuntimeException("Email already registered"); User u = new User(); u.setEmail(req.getEmail()); u.setName(req.getName()); u.setPassword(encoder.encode(req.getPassword())); u.setRole(Role.USER); userRepository.save(u); String token = jwtUtil.generateToken(u.getEmail(), Map.of("role", u.getRole().name(), "name", u.getName())); return new AuthResponse(token, u.getRole().name(), u.getName()); } @PostMapping("/login") public AuthResponse login(@RequestBody @Valid AuthRequest req){ authManager.authenticate(new UsernamePasswordAuthenticationToken(req.getEmail(), req.getPassword())); User u = userRepository.findByEmail(req.getEmail()).orElseThrow(); String token = jwtUtil.generateToken(u.getEmail(), Map.of("role", u.getRole().name(), "name", u.getName())); return new AuthResponse(token, u.getRole().name(), u.getName()); } }